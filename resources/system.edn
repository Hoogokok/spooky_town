{:system/env
 #profile {:dev  :dev
           :test :test
           :prod :prod}




 :server/http
 {:port    #long #or [#env PORT 3000]
  :host    #or [#env HTTP_HOST "0.0.0.0"]
  :handler #ig/ref :handler/ring}

 :handler/ring
 {:router                #ig/ref :router/core
  :api-path              "/api"
  :cookie-secret         #or [#env COOKIE_SECRET "NRRVZJLCXQTUOLZC"]
  :site-defaults-config  {:params    {:urlencoded true
                                      :multipart  true
                                      :nested     true
                                      :keywordize true}
                          :cookies   true
                          :session   {:flash true
                                      :cookie-name "kit.spooky-town"
                                      :cookie-attrs {:max-age     86400
                                                     :http-only   true
                                                     :same-site   :strict}}
                          :security  {:anti-forgery   false
                                      :xss-protection {:enable? true, :mode :block}
                                      :frame-options  :sameorigin
                                      :content-type-options :nosniff}
                          :static    {:resources "public"}
                          :responses {:not-modified-responses true
                                      :absolute-redirects     true
                                      :content-types          true
                                      :default-charset        "utf-8"}}
  :middleware {:auth #ig/ref :web.middleware/auth}}

 :router/routes
 {:routes #ig/refset :reitit/routes}

 :router/core
 {:routes #ig/ref :router/routes
  :env #ig/ref :system/env}

 :db.sql/connection
 #profile
  {:dev  {:dbtype "postgresql"
          :jdbc-url "jdbc:postgresql://localhost:5432/spooky_town_dev"
          :username "postgres"
          :password "postgres"}
   :test {:dbtype "postgresql"
          :jdbc-url "jdbc:postgresql://localhost:5432/spooky_town_test"
          :username "postgres"
          :password "postgres"}
   :prod {:dbtype "postgresql"
          :jdbc-url #env JDBC_DATABASE_URL}}



 :db.sql/migrations
 {:store :database
  :migration-dir "migrations"
  :db #profile
       {:dev {:dbtype "postgresql"
              :jdbc-url "jdbc:postgresql://localhost:5432/spooky_town_dev"
              :username "postgres"
              :password "postgres"}
        :test {:dbtype "postgresql"
               :jdbc-url "jdbc:postgresql://localhost:5432/spooky_town_test"
               :username "postgres"
               :password "postgres"}
        :prod {:dbtype "postgresql"
               :jdbc-url #env JDBC_DATABASE_URL}}
  :migrate-on-init? true}

 :db.sql/queries
 {:conn  #ig/ref :db.sql/connection
  :queries ["sql/queries.sql"]
  :options {:quoting :ansi}}

 :db/tx-manager
 {:conn #ig/ref :db.sql/connection
  :queries #ig/ref :db.sql/queries}

 :auth/jwt
 {:jwt-secret #or [#env JWT_SECRET "DIFFERENT_SECRET_HERE"]
  :token-expire-hours 24}

 :infrastructure/role-request-repository
 {:datasource #ig/ref :db.sql/connection
  :tx-manager #ig/ref :db/tx-manager
  :queries #ig/ref :db.sql/queries}

 :infrastructure/event-bus {}

 :infrastructure/user-repository
 {:datasource #ig/ref :db.sql/connection
  :tx-manager #ig/ref :db/tx-manager
  :queries #ig/ref :db.sql/queries}

 :auth/bcrypt-password-gateway {}

 :web.middleware/auth
 {:auth-gateway #ig/ref :auth/jwt}

 :infrastructure/email-gateway
 {:smtp-config {:host #or [#env SMTP_HOST "smtp.gmail.com"]
                :port #long #or [#env SMTP_PORT 587]
                :user #env SMTP_USER
                :pass #env SMTP_PASS
                :tls true
                :from #or [#env SMTP_FROM "noreply@spookytown.com"]}
  :base-url #or [#env BASE_URL "http://localhost:3000"]}

 :infrastructure/email-token-gateway
 {:secret #or [#env EMAIL_TOKEN_SECRET "ANOTHER_SECRET_HERE"]}

 :infrastructure/movie-repository
 {:datasource #ig/ref :db.sql/connection
  :tx-manager #ig/ref :db/tx-manager
  :queries #ig/ref :db.sql/queries}

 :infrastructure/actor-repository
 {:datasource #ig/ref :db.sql/connection
  :tx-manager #ig/ref :db/tx-manager
  :queries #ig/ref :db.sql/queries}

 :infrastructure/movie-actor-repository
 {:datasource #ig/ref :db.sql/connection
  :tx-manager #ig/ref :db/tx-manager
  :queries #ig/ref :db.sql/queries}

 :infrastructure/movie-director-repository
 {:datasource #ig/ref :db.sql/connection
  :tx-manager #ig/ref :db/tx-manager
  :queries #ig/ref :db.sql/queries}

 :infrastructure/director-repository
 {:datasource #ig/ref :db.sql/connection
  :tx-manager #ig/ref :db/tx-manager
  :queries #ig/ref :db.sql/queries}

 :infrastructure/email-verification-gateway
 {:secret #or [#env EMAIL_VERIFICATION_SECRET "VERIFICATION_SECRET_HERE"]}

 :infrastructure/ulid-generator {}

 :infrastructure/cloudinary-storage
 {:cloud-name #or [#env CLOUDINARY_CLOUD_NAME "your-cloud-name"]
  :api-key #or [#env CLOUDINARY_API_KEY "your-api-key"]
  :api-secret #or [#env CLOUDINARY_API_SECRET "your-api-secret"]}

 :domain/user-use-case
 {:with-tx #ig/ref :db/tx-manager
  :user-repository #ig/ref :infrastructure/user-repository
  :event-subscriber #ig/ref :infrastructure/event-bus
  :password-gateway #ig/ref :auth/bcrypt-password-gateway
  :token-gateway #ig/ref :auth/jwt
  :email-gateway #ig/ref :infrastructure/email-gateway
  :email-token-gateway #ig/ref :infrastructure/email-token-gateway
  :email-verification-gateway #ig/ref :infrastructure/email-verification-gateway
  :id-generator #ig/ref :infrastructure/ulid-generator}

 :domain/role-request-use-case
 {:with-tx #ig/ref :db/tx-manager
  :role-request-repository #ig/ref :infrastructure/role-request-repository
  :event-publisher #ig/ref :infrastructure/event-bus}

 :domain/movie-use-case
 {:with-tx #ig/ref :db/tx-manager
  :movie-repository #ig/ref :infrastructure/movie-repository
  :actor-repository #ig/ref :infrastructure/actor-repository
  :movie-actor-repository #ig/ref :infrastructure/movie-actor-repository
  :movie-director-repository #ig/ref :infrastructure/movie-director-repository
  :director-repository #ig/ref :infrastructure/director-repository
  :event-publisher #ig/ref :infrastructure/event-bus
  :id-generator #ig/ref :infrastructure/ulid-generator
  :image-gateway #ig/ref :infrastructure/cloudinary-storage}

 :domain/movie-query-service
 {:movie-repository #ig/ref :infrastructure/movie-repository
  :movie-actor-repository #ig/ref :infrastructure/movie-actor-repository
  :movie-director-repository #ig/ref :infrastructure/movie-director-repository
  :tx-manager #ig/ref :db/tx-manager}


 :reitit.routes/api
 {:base-path ""
  :tx-manager #ig/ref :db/tx-manager
  :role-request-use-case #ig/ref :domain/role-request-use-case
  :user-use-case #ig/ref :domain/user-use-case
  :movie-use-case #ig/ref :domain/movie-use-case}}

